{"remainingRequest":"D:\\Development\\AngularProject\\appsecurite6\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Development\\AngularProject\\appsecurite6\\node_modules\\primeng\\components\\organizationchart\\organizationchart.js","dependencies":[{"path":"D:\\Development\\AngularProject\\appsecurite6\\node_modules\\primeng\\components\\organizationchart\\organizationchart.js","mtime":1563198751672},{"path":"D:\\Development\\AngularProject\\appsecurite6\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563198691178},{"path":"D:\\Development\\AngularProject\\appsecurite6\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1563198608965}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nvar __param = /*@__PURE__*/ require(\"tslib\").__param;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar animations_1 = require(\"@angular/animations\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar shared_1 = require(\"../common/shared\");\nvar shared_2 = require(\"../common/shared\");\nvar OrganizationChartNode = /** @class */ /*@__PURE__*/ (function () {\n    function OrganizationChartNode(chart) {\n        this.chart = chart;\n    }\n    Object.defineProperty(OrganizationChartNode.prototype, \"leaf\", {\n        get: function () {\n            return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrganizationChartNode.prototype, \"colspan\", {\n        get: function () {\n            return (this.node.children && this.node.children.length) ? this.node.children.length * 2 : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OrganizationChartNode.prototype.onNodeClick = function (event, node) {\n        this.chart.onNodeClick(event, node);\n    };\n    OrganizationChartNode.prototype.toggleNode = function (event, node) {\n        node.expanded = !node.expanded;\n        event.preventDefault();\n    };\n    OrganizationChartNode.prototype.isSelected = function () {\n        return this.chart.isSelected(this.node);\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], OrganizationChartNode.prototype, \"node\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], OrganizationChartNode.prototype, \"root\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], OrganizationChartNode.prototype, \"first\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], OrganizationChartNode.prototype, \"last\", void 0);\n    OrganizationChartNode = __decorate([\n        core_1.Component({\n            selector: '[pOrganizationChartNode]',\n            template: \"\\n        <tr *ngIf=\\\"node\\\">\\n            <td [attr.colspan]=\\\"colspan\\\">\\n                <div class=\\\"ui-organizationchart-node-content ui-widget-content ui-corner-all {{node.styleClass}}\\\" \\n                    [ngClass]=\\\"{'ui-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false,'ui-state-highlight':isSelected()}\\\"\\n                    (click)=\\\"onNodeClick($event,node)\\\">\\n                    <div *ngIf=\\\"!chart.getTemplateForNode(node)\\\">{{node.label}}</div>\\n                    <div *ngIf=\\\"chart.getTemplateForNode(node)\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"chart.getTemplateForNode(node); context: {$implicit: node}\\\"></ng-container>\\n                    </div>\\n                    <a *ngIf=\\\"!leaf\\\" href=\\\"#\\\" class=\\\"ui-node-toggler\\\" (click)=\\\"toggleNode($event, node)\\\">\\n                        <i class=\\\"ui-node-toggler-icon pi\\\" [ngClass]=\\\"{'pi-chevron-down': node.expanded, 'pi-chevron-up': !node.expanded}\\\"></i>\\n                    </a>\\n                </div>\\n            </td>\\n        </tr>\\n        <tr [style.visibility]=\\\"!leaf&&node.expanded ? 'inherit' : 'hidden'\\\" class=\\\"ui-organizationchart-lines\\\" [@childState]=\\\"'in'\\\">\\n            <td [attr.colspan]=\\\"colspan\\\">\\n                <div class=\\\"ui-organizationchart-line-down\\\"></div>\\n            </td>\\n        </tr>\\n        <tr [style.visibility]=\\\"!leaf&&node.expanded ? 'inherit' : 'hidden'\\\" class=\\\"ui-organizationchart-lines\\\" [@childState]=\\\"'in'\\\">\\n            <ng-container *ngIf=\\\"node.children && node.children.length === 1\\\">\\n                <td [attr.colspan]=\\\"colspan\\\">\\n                    <div class=\\\"ui-organizationchart-line-down\\\"></div>\\n                </td>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"node.children && node.children.length > 1\\\">\\n                <ng-template ngFor let-child [ngForOf]=\\\"node.children\\\" let-first=\\\"first\\\" let-last=\\\"last\\\">\\n                    <td class=\\\"ui-organizationchart-line-left\\\" [ngClass]=\\\"{'ui-organizationchart-line-top':!first}\\\">&nbsp;</td>\\n                    <td class=\\\"ui-organizationchart-line-right\\\" [ngClass]=\\\"{'ui-organizationchart-line-top':!last}\\\">&nbsp;</td>\\n                </ng-template>\\n            </ng-container>\\n        </tr>\\n        <tr [style.visibility]=\\\"!leaf&&node.expanded ? 'inherit' : 'hidden'\\\" class=\\\"ui-organizationchart-nodes\\\" [@childState]=\\\"'in'\\\">\\n            <td *ngFor=\\\"let child of node.children\\\" colspan=\\\"2\\\">\\n                <table class=\\\"ui-organizationchart-table\\\" pOrganizationChartNode [node]=\\\"child\\\"></table>\\n            </td>\\n        </tr>\\n    \",\n            animations: [\n                animations_1.trigger('childState', [\n                    animations_1.state('in', animations_1.style({ opacity: 1 })),\n                    animations_1.transition('void => *', [\n                        animations_1.style({ opacity: 0 }),\n                        animations_1.animate(150)\n                    ]),\n                    animations_1.transition('* => void', [\n                        animations_1.animate(150, animations_1.style({ opacity: 0 }))\n                    ])\n                ])\n            ],\n        }),\n        __param(0, core_1.Inject(core_1.forwardRef(function () { return OrganizationChart; })))\n    ], OrganizationChartNode);\n    return OrganizationChartNode;\n}());\nexports.OrganizationChartNode = OrganizationChartNode;\nvar OrganizationChart = /** @class */ /*@__PURE__*/ (function () {\n    function OrganizationChart(el, domHandler) {\n        this.el = el;\n        this.domHandler = domHandler;\n        this.selectionChange = new core_1.EventEmitter();\n        this.onNodeSelect = new core_1.EventEmitter();\n        this.onNodeUnselect = new core_1.EventEmitter();\n    }\n    Object.defineProperty(OrganizationChart.prototype, \"root\", {\n        get: function () {\n            return this.value && this.value.length ? this.value[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OrganizationChart.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n        this.templates.forEach(function (item) {\n            _this.templateMap[item.getType()] = item.template;\n        });\n    };\n    OrganizationChart.prototype.getTemplateForNode = function (node) {\n        if (this.templateMap)\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\n        else\n            return null;\n    };\n    OrganizationChart.prototype.onNodeClick = function (event, node) {\n        var eventTarget = event.target;\n        if (eventTarget.className && (eventTarget.className.indexOf('ui-node-toggler') !== -1 || eventTarget.className.indexOf('ui-node-toggler-icon') !== -1)) {\n            return;\n        }\n        else if (this.selectionMode) {\n            if (node.selectable === false) {\n                return;\n            }\n            var index_1 = this.findIndexInSelection(node);\n            var selected = (index_1 >= 0);\n            if (this.selectionMode === 'single') {\n                if (selected) {\n                    this.selection = null;\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\n                }\n                else {\n                    this.selection = node;\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\n                }\n            }\n            else if (this.selectionMode === 'multiple') {\n                if (selected) {\n                    this.selection = this.selection.filter(function (val, i) { return i != index_1; });\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\n                }\n                else {\n                    this.selection = (this.selection || []).concat([node]);\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\n                }\n            }\n            this.selectionChange.emit(this.selection);\n        }\n    };\n    OrganizationChart.prototype.findIndexInSelection = function (node) {\n        var index = -1;\n        if (this.selectionMode && this.selection) {\n            if (this.selectionMode === 'single') {\n                index = (this.selection == node) ? 0 : -1;\n            }\n            else if (this.selectionMode === 'multiple') {\n                for (var i = 0; i < this.selection.length; i++) {\n                    if (this.selection[i] == node) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    OrganizationChart.prototype.isSelected = function (node) {\n        return this.findIndexInSelection(node) != -1;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array)\n    ], OrganizationChart.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], OrganizationChart.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], OrganizationChart.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], OrganizationChart.prototype, \"selectionMode\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], OrganizationChart.prototype, \"selection\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], OrganizationChart.prototype, \"selectionChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], OrganizationChart.prototype, \"onNodeSelect\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], OrganizationChart.prototype, \"onNodeUnselect\", void 0);\n    __decorate([\n        core_1.ContentChildren(shared_2.PrimeTemplate),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], OrganizationChart.prototype, \"templates\", void 0);\n    OrganizationChart = __decorate([\n        core_1.Component({\n            selector: 'p-organizationChart',\n            template: \"\\n        <div [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" [ngClass]=\\\"'ui-organizationchart ui-widget'\\\">\\n            <table class=\\\"ui-organizationchart-table\\\" pOrganizationChartNode [node]=\\\"root\\\" *ngIf=\\\"root\\\"></table>\\n        </div>\\n    \",\n            providers: [domhandler_1.DomHandler]\n        })\n    ], OrganizationChart);\n    return OrganizationChart;\n}());\nexports.OrganizationChart = OrganizationChart;\nvar OrganizationChartModule = /** @class */ /*@__PURE__*/ (function () {\n    function OrganizationChartModule() {\n    }\n    OrganizationChartModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [OrganizationChart, shared_1.SharedModule],\n            declarations: [OrganizationChart, OrganizationChartNode]\n        })\n    ], OrganizationChartModule);\n    return OrganizationChartModule;\n}());\nexports.OrganizationChartModule = OrganizationChartModule;\n",null]}