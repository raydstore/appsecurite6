{"remainingRequest":"C:\\AngularProject\\appsecurite5\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\AngularProject\\appsecurite5\\node_modules\\primeng\\components\\checkbox\\checkbox.js","dependencies":[{"path":"C:\\AngularProject\\appsecurite5\\node_modules\\primeng\\components\\checkbox\\checkbox.js","mtime":1531393534000},{"path":"C:\\AngularProject\\appsecurite5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531413946556},{"path":"C:\\AngularProject\\appsecurite5\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.CHECKBOX_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return Checkbox; }),\n    multi: true\n};\nvar Checkbox = /** @class */ /*@__PURE__*/ (function () {\n    function Checkbox(cd) {\n        this.cd = cd;\n        this.onChange = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n        this.focused = false;\n        this.checked = false;\n    }\n    Checkbox.prototype.onClick = function (event, checkbox, focus) {\n        event.preventDefault();\n        if (this.disabled) {\n            return;\n        }\n        this.checked = !this.checked;\n        this.updateModel();\n        if (focus) {\n            checkbox.focus();\n        }\n    };\n    Checkbox.prototype.updateModel = function () {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n            this.onModelChange(this.model);\n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        this.onChange.emit(this.checked);\n    };\n    Checkbox.prototype.handleChange = function (event) {\n        this.checked = event.target.checked;\n        this.updateModel();\n    };\n    Checkbox.prototype.isChecked = function () {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    };\n    Checkbox.prototype.removeValue = function () {\n        var _this = this;\n        this.model = this.model.filter(function (val) { return val !== _this.value; });\n    };\n    Checkbox.prototype.addValue = function () {\n        if (this.model)\n            this.model = this.model.concat([this.value]);\n        else\n            this.model = [this.value];\n    };\n    Checkbox.prototype.onFocus = function (event) {\n        this.focused = true;\n    };\n    Checkbox.prototype.onBlur = function (event) {\n        this.focused = false;\n        this.onModelTouched();\n    };\n    Checkbox.prototype.writeValue = function (model) {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    };\n    Checkbox.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    Checkbox.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    Checkbox.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Checkbox.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Checkbox.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"binary\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"label\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Checkbox.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"inputId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Checkbox.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"labelStyleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", forms_1.FormControl)\n    ], Checkbox.prototype, \"formControl\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Checkbox.prototype, \"onChange\", void 0);\n    Checkbox = __decorate([\n        core_1.Component({\n            selector: 'p-checkbox',\n            template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-chkbox ui-widget'\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [name]=\\\"name\\\" [value]=\\\"value\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n                [ngClass]=\\\"{'ui-state-focus':focused}\\\" (change)=\\\"handleChange($event)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\">\\n            </div>\\n            <div class=\\\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\\\" (click)=\\\"onClick($event,cb,true)\\\"\\n                        [ngClass]=\\\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n        <label (click)=\\\"onClick($event,cb,true)\\\" [class]=\\\"labelStyleClass\\\"\\n                [ngClass]=\\\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\\\"\\n                *ngIf=\\\"label\\\" [attr.for]=\\\"inputId\\\">{{label}}</label>\\n    \",\n            providers: [exports.CHECKBOX_VALUE_ACCESSOR]\n        })\n    ], Checkbox);\n    return Checkbox;\n}());\nexports.Checkbox = Checkbox;\nvar CheckboxModule = /** @class */ /*@__PURE__*/ (function () {\n    function CheckboxModule() {\n    }\n    CheckboxModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [Checkbox],\n            declarations: [Checkbox]\n        })\n    ], CheckboxModule);\n    return CheckboxModule;\n}());\nexports.CheckboxModule = CheckboxModule;\n",null]}